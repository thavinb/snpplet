/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CREATE_SAMPLE_MAP {
        ext.when = !params.sample_map
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/sample_map" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
FASTP
https://github.com/OpenGene/fastp
----------------------------------------------------------------------------------------
*/
    withName: FASTP {
        ext.args   = '--cut_front --cut_tail --cut_window_size 4 --cut_mean_quality 20 --length_required 15'
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
BWA_INDEX
    ext.args: bwa index -p bwa/${fasta.baseName} $fasta
----------------------------------------------------------------------------------------
*/
    withName: BWA_INDEX {
        ext.args   = ''
        publishDir = [
            enabled: false,
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
BWA_MEM - Read mapping
    ext.args: bwa mem -t $task.cpu
    ext.args2: samtools fixmate -t $task.cpus
    ext.args3: samtools sort -t $task.cpus -o ${prefiix}.bam
----------------------------------------------------------------------------------------
*/
    withName: BWA_MEM {
        ext.args   = { "-R '@RG\\tID:${meta.id}\\tSM:${meta.id}\\tPL:Illumina'"}
        ext.args2  = ''
        ext.args3  = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/bam" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
GATK4_MARKDUPLICATES
TODO: change to appropiate output of metric file
    ext.args: gatk --java-options "-Xmx${avail_mem}M" MarkDuplicates \\
                $input_list \\
                --OUTPUT ${prefix_bam} \\
                --METRICS_FILE ${prefix}.metrics \\
                --TMP_DIR . \\
                ${reference} \\
                $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_MARKDUPLICATES {
        ext.args   = ''
        publishDir = [
            enabled: false,
            path: { "${params.outdir}/bam" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
SAMTOOLS - Index and Extract statistic after mapping
----------------------------------------------------------------------------------------
*/
    // Index reference fasta
    withName: SAMTOOLS_FAIDX {
        ext.args = ''
        publishDir = [
            enabled: false,
        ]
    }
    // Index mapping bam (bai)
    withName: SAMTOOLS_INDEX {
        ext.args = ''
        publishDir = [
            enabled: false,
        ]
    }
    withName: SAMTOOLS_FLAGSTAT {
        ext.args   = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/bam/stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SAMTOOLS_COVERAGE {
        ext.args = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/bam/stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SAMTOOLS_DEPTH {
        ext.args = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/bam/stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GATK
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GATK4_CREATESEQUENCEDICTIONARY - GATK create dict of reference fastq
    gatk --java-options "-Xmx${avail_mem}M" CreateSequenceDictionary \\
        --REFERENCE $fasta \\
        --URI $fasta \\
        --TMP_DIR . \\
        $args

----------------------------------------------------------------------------------------
*/
    withName: GATK4_CREATESEQUENCEDICTIONARY {
        ext.args = ''
        publishDir = [
            enabled: false,
        ]
    }

/*
----------------------------------------------------------------------------------------
GATK4_HAPLOTYPECALLER - GATK variant calling
    gatk --java-options "-Xmx${avail_mem}M" HaplotypeCaller \\
        --input $input \\
        --output ${prefix}.vcf.gz \\
        --reference $fasta \\
        $dbsnp_command \\ (--dbsnp)
        $interval_command \\ (--intervals)
        $dragstr_command \\ (--dragstr-params-path)
        $bamout_command \\ (--bam-writer-type)
        --tmp-dir . \\
        $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_HAPLOTYPECALLER {
        ext.args = '-ERC GVCF -mbq 20 -ploidy 1'
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/gvcf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
GATK4_GENOMICSDBIMPORT - Create vcf db
    gatk --java-options "-Xmx${avail_mem}M" GenomicsDBImport \\
        $input_command \\ (--sample-name-map || --variant)
        $genomicsdb_command \\ (--genomicsdb-update-workspace-path)
        $interval_command \\ (--intervals || --output-interval-list-to-file)
        --tmp-dir . \\
        $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_GENOMICSDBIMPORT {
        ext.args = ''
        publishDir = [
            enabled: false,
            path: { "${params.outdir}/genomicsdb" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
GATK4_GENOTYPEGVCFS - get jointed vcf from GATK DB
    gatk --java-options "-Xmx${avail_mem}M" GenotypeGVCFs \\
        --variant $gvcf_command \\
        --output ${prefix}.vcf.gz \\
        --reference $fasta \\
        $interval_command \\ (--intervals)
        $dbsnp_command \\ (--dbsnp)
        --tmp-dir . \\
        $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_GENOTYPEGVCFS {
        ext.args = '-ploidy 1'
        publishDir = [
            enabled: false,
            path: { "${params.outdir}/joint_gvcf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
GATK4_VARIANTFILTRATION - mask jointed vcf with select filter
    gatk --java-options "-Xmx${avail_mem}M" VariantFiltration \\
        --variant $vcf \\
        --output ${prefix}_mask_filter.vcf.gz \\
        --reference $fasta \\
        --tmp-dir . \\
        $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_VARIANTFILTRATION {
        ext.args = '--filter "QD < 2.0 || MQ < 40.0" --filter-name qd-md'
        publishDir = [
            enabled: false,
            path: { "${params.outdir}/joint_gvcf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
GATK4_SELECTVARIANTS - filter joint vcf through filter mask
    gatk --java-options "-Xmx${avail_mem}M" SelectVariants \\
        --variant $vcf \\
        --output ${prefix}.selectvariants.vcf.gz \\
        $interval \\ (--interval)
        --tmp-dir . \\
        $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_SELECTVARIANTS {
        ext.args = '--exclude-filtered -select-type SNP'
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/joint_gvcf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
BCFTOOLS_STATS - get detail information on selected jointed vcf
    bcftools stats \\
        $args \\
        $fasta_ref \\
        $regions_file \\
        $targets_file \\
        $samples_file \\
        $vcf > ${prefix}.bcftools_stats.txt
----------------------------------------------------------------------------------------
*/
    withName: BCFTOOLS_STATS {
        ext.args = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/joint_gvcf/stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


/*
----------------------------------------------------------------------------------------
GATK4_VARIANTSTOTABLE - VCF to tabular format
    gatk --java-options "-Xmx${avail_mem}M" VariantsToTable \\
            --variant $vcf \\
            --output ${prefix}.vcf.gz \\
            --reference $fasta \\
            $args
----------------------------------------------------------------------------------------
*/
    withName: GATK4_VARIANTSTOTABLE {
        ext.args = '--fields POS --genotype-fields GT'
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

/*
----------------------------------------------------------------------------------------
CREATE_MSA - turn Tabular format of variants output from GATK4_VARIANTSTOTABLE
             (POS SAMPLE1.GT SAMPLE2.GT ..) to Multiple Alignment FASTA.
----------------------------------------------------------------------------------------
*/
    withName: CREATE_MSA {
        ext.args = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MULTIQC {
        ext.args = ''
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/workflow_report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
